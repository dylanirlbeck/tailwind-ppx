name: CI

on: 
  push:
    branches:
      - master
    paths:
      - 'lib/**'
      - 'test/**'
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build and test native
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: 12

      - uses: actions/checkout@v2
      - name: Cache esy dependencies
        uses: actions/cache@v1
        id: cache
        with:
          path: _export
          key: ${{ runner.OS }}-build-${{ hashFiles('esy.lock/index.json') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-

      - name: Install esy
        run: npm install -g esy@latest

      - name: Import dependencies
        if: steps.cache.outputs.cache-hit == 'true'
        run: esy import-build _export/*

      - name: Install dependencies
        run: esy install

      - name: Build
        run: esy build --release

      - name: Check formatting
        run: esy format

      - name: Run Native tests
        run: esy test_native

      - name: Export dependencies
        run: esy export-dependencies
        if: matrix.os != 'windows-latest'

  test_bucklescript:
    name: Build and test bucklescript
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [12.x]
    steps:
      - uses: actions/checkout@v1

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache esy dependencies
        uses: actions/cache@v1
        id: cache
        with:
          path: _export
          key: ${{ runner.OS }}-build-${{ hashFiles('esy.lock/index.json') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      - name: Install esy
        run: npm install -g esy@latest

      - name: Import dependencies
        if: steps.cache.outputs.cache-hit == 'true'
        run: esy import-build _export/*

      - name: Install dependencies
        run: esy install

      - name: Build
        run: esy build

      - name: Cache node modules
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.yarn-cache
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
#     - name: Import dependencies
#       if: steps.cache.outputs.cache-hit == 'true'
#       run: esy import-build _export/*
#       working-directory: ./test/bucklescript

      - name: Install Yarn dependencies
        run: yarn
        working-directory: ./test/bucklescript

      - name: Build
        run: yarn build
        working-directory: ./test/bucklescript

      - name: Run tests
        run: yarn test
        working-directory: ./test/bucklescript

